/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.inkombizz.report;

import java.io.FileNotFoundException;
import java.io.Serializable;
import java.sql.Connection;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import lombok.Data;
import net.sf.jasperreports.engine.JRDataSource;
import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.FileSystemResource;
import org.springframework.core.io.Resource;

/**
 *
 * @author imamsolikhin
 */

@Data
public class CustomJasperReport implements Serializable {

//  private static final Logger LOGGER = LoggerFactory.getLogger(CustomJasperReport.class);
  private static final long serialVersionUID = -8527892494236381680L;

  // required information
  String reportName;
  String reportDir;
  Connection connection;

  // report parameters
  Map<String, Object> parameters = new HashMap<String, Object>();

  // report format
  JasperReportExportFormat reportFormat = JasperReportExportFormat.HTML_FORMAT;

  // data source
  Collection<?> reportData;
  JRDataSource dataSource;

  // additional configuration
  Boolean useDefaultConfiguration;
  Map<String, Object> reportConfiguration = new HashMap<String, Object>();

  // generated byte array
  byte[] content;

  // output filename
  String outputFilename;

  public static long getSerialversionuid() {
    return serialVersionUID;
  }

  /**
   * get report as resource from report path
   *
   * @return
   * @throws FileNotFoundException
   */
  public Resource getReport() throws FileNotFoundException {
    String reportPath = reportDir + reportName;
    Resource result = new FileSystemResource(reportPath + ".jasper");
    if (result.exists()) {
      return result;
    }

    result = new FileSystemResource(reportPath + ".jrxml");
    if (result.exists()) {
      return result;
    }
    throw new FileNotFoundException(
            "Report [" + reportPath + ".jasper" + "] or [" + reportPath + ".jrxml] file not found");
  }

  public Resource getReportPath() throws FileNotFoundException {
    String reportPath = reportDir + reportName;
    ClassPathResource result = new ClassPathResource(reportPath + ".jasper");
    // Resource result = new FileSystemResource(reportPath + ".jasper");
    if (result.exists()) {
      return result;
    }

    result = new ClassPathResource(reportPath + ".jrxml");
    if (result.exists()) {
      return result;
    }
    throw new FileNotFoundException(
            "Report [" + reportPath + ".jasper" + "] or [" + reportPath + ".jrxml] file not found");
  }
}
